{"version":3,"sources":["img/logo.png","components/RegistrationForm.js","components/Details.js","components/Students.js","components/UpdateForm.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","StudentForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateEmail","email","length","document","getElementById","style","display","StudentsDetails","find","e","innerHTML","console","log","validatePassword","pw1","pw2","validateGender","gender","validateHobby","hobbies","validateCountry","country","onInputChange","x","getElementsByClassName","i","onSubmit","preventDefault","data","target","value","password","hobby","forEach","checked","push","repassword","setState","studentDetails","objectSpread","state","dispatch","type","window","confirm","reset","react_default","a","createElement","rel","href","integrity","crossOrigin","className","id","htmlFor","name","placeholder","onChange","Component","connect","Post","UpdateStudent","details","react_router_dom","to","pathname","Students","DeleteStudents","students","deleteStudents","alert","scope","map","post","Details_Post","key","marginLeft","onClick","history","replace","location","h","defaultValue","readOnly","defaultChecked","react_router","App","width","src","logo","alt","path","exact","component","UpdateForm","Boolean","hostname","match","intialState","reducer","arguments","undefined","action","concat","_ret","dltStudents","_loop","filter","v","store","createStore","ReactDOM","render","es","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f0454a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.81f2ef29.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nclass StudentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n             email:'',\n             password:'',\n             gender:'',\n             hobbies:[],\n             country:''\n        }\n    }\n\n   validateEmail = (email) =>{\n       if(email.length===0)\n       {\n        document.getElementById('err-email').style.display='block';\n       }\n       else{\n        if(this.props.StudentsDetails.find(e=>e.email === email)){\n            document.getElementById('err-email').innerHTML='This email is already registerd';\n            document.getElementById('err-email').style.display='block';\n            console.log(\"Student already exsits\");\n        }\n        else{\n            return true;\n        }\n       }\n    }\n   validatePassword = (pw1, pw2) =>{\n        if(pw1.length===0){\n            document.getElementById('pwd-empty').style.display='block';\n        }\n        if(pw1===pw2){\n            return true;\n        }    \n        else{\n            document.getElementById('pwd-match').style.display='block';\n        }\n    }\n\n   validateGender = (gender) =>{\n        if(gender.length===0){\n            document.getElementById('err-gender').style.display='block';   \n        }\n        else{\n            return true;\n        }\n    }\n   validateHobby = (hobbies) =>{\n        if(hobbies.length>1){\n           return true;\n        }\n        else{\n            document.getElementById('err-hobby').style.display='block';\n        }        \n    }\n   validateCountry = (country) =>{\n        if(country.length !==0)\n        return true;\n   }\n   onInputChange = ()=>{\n        let x = document.getElementsByClassName('error');\n        for(var i=0; i<x.length; i++){\n           x[i].style.display='none'; \n        }\n    }\n    onSubmit = (e) =>{\n        e.preventDefault();\n        let data= e.target;\n        let email= data.email.value;\n        let password= data.password.value;\n        let gender = data.gender.value;\n        let hobbies = [];\n        data.hobby.forEach(e => {\n                if(e.checked)\n                hobbies.push(e.value) ;\n        });\n        let country = data.country.value;\n        if(\n            this.validateEmail(email) && \n            this.validatePassword(password, data.repassword.value) &&\n            this.validateGender(gender) &&\n            this.validateHobby(hobbies) &&\n            this.validateCountry(country)\n        )\n        {\n            this.setState({\n                email,\n                password,\n                gender,\n                hobbies,\n                country\n                },\n                ()=>{ //callback function from state state\n                const studentDetails = {...this.state};            \n                // dispatch action to add new student in the list\n                this.props.dispatch({\n                    type:'ADD_Student',\n                    data: studentDetails\n                });  \n                window.confirm('Thanks for enrolling!!');\n                document.getElementById('my-form').reset();\n            })\n            \n    }\n    \n    \n}\n    \n    render() {\n    return (\n        <div>\n            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossOrigin=\"anonymous\" />\n            <form  className=\"pb-5\" id=\"my-form\" onSubmit={this.onSubmit}>\n            <p className=\"h4 mb-4 text-center\">Student Information Form</p>\n            <div className=\"form-group row\">\n                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\n                <div className=\"col-sm-10\">\n                <input type=\"email\" \n                className=\"form-control\" \n                name=\"email\" \n                placeholder=\"Email\" \n                onChange={this.onInputChange}\n                />\n                <div className=\"error\" id='err-email'>Please provide email ID </div>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Password</label>\n                <div className=\"col-sm-10\">\n                <input type=\"password\" className=\"form-control\" name=\"password\"  placeholder=\"Password\" onChange={this.onInputChange} />\n                <div className=\"error\" id=\"pwd-empty\">Password can't be empty</div>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Retype Password</label>\n                <div className=\"col-sm-10\">\n                <input type=\"password\" className=\"form-control\" name=\"repassword\" placeholder=\"Password\"  onChange={this.onInputChange}/>\n                <div className=\"error\" id=\"pwd-match\">Passwords didn't matched</div>\n                </div>\n            </div>\n            <fieldset className=\"form-group\">\n                <div className=\"row\">\n                <legend className=\"col-form-label col-sm-2 pt-0\">Gender</legend>\n                <div className=\"col-sm-10\">\n                    <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gridRadios1\" value=\"male\" onChange={this.onInputChange}  />\n                    <label className=\"form-check-label\" htmlFor=\"gridRadios1\">\n                        Male\n                    </label>\n                    </div>\n                    <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gridRadios2\" value=\"female\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\n                        Female\n                    </label>\n                    </div>\n                    <div className=\"error\" id=\"err-gender\">We ain't that mordern are we?</div>\n                </div>\n                </div>\n            </fieldset>\n            <div className=\"form-group row\">\n                <div className=\"col-sm-2\">Hobbies</div>\n                <div className=\"col-sm-10\">\n                <div className=\"error\" id=\"err-hobby\">We are sure you have atleast 2 of them?</div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Reading\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Reading\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"traveling\" onChange={this.onInputChange}  />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Traveling\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\"  value=\"Music\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Music\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Dance\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Dance\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Gaming\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Gaming\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Swimming\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Swimming\n                    </label>\n                </div>\n                </div>\n            </div>\n            <div className=\"form-group row mt-3\">\n            <div className=\"col-sm-2\">Country</div>\n            <div className=\"col-sm-10\">\n            <select className=\"form-control col-sm-2\" name='country'>\n                <option>India</option>\n                <option>USA</option>\n                <option>Japan</option>\n                <option>China</option>\n                <option>Other</option>\n            </select>\n            </div>\n            </div>\n            \n            <div className=\"form-group row\">\n                <div className=\"col-sm-10 m-auto\" >\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Enroll</button>\n                </div>\n            </div>\n            </form>\n\n\n        </div>\n    )\n}\n\n\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        StudentsDetails: state\n    }\n}\n\nexport default  connect(mapStateToProps)(StudentForm);","import React, { Component } from 'react';\nimport {Link}  from 'react-router-dom';\n\nexport default class Post extends Component {\n    UpdateStudent = () =>{\n\n    }\n    render() {\n        return (\n            <tbody>\n            <tr>\n                <td>\n                <input  type=\"checkbox\" className='std-select' value={this.props.details.email} />\n                </td>\n                <td>\n                    {this.props.details.email}\n                </td>\n                <td>\n                    {this.props.details.password}\n                </td>\n                <td>\n                    {this.props.details.gender}\n                </td>\n                <td>\n                    {this.props.details.country}\n                </td>\n                <td>\n                <Link\n                to={{\n                pathname: \"/update\",\n                email: this.props.details.email,\n                password: this.props.details.password,\n                gender: this.props.details.gender,\n                country: this.props.details.country,\n                hobbies: this.props.details.hobbies,\n                }}\n                > UPDATE </Link>\n                </td>\n            </tr>\n            </tbody>\n            \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Post from './Details'\nclass Students extends Component {\n   \n    DeleteStudents = () =>{\n        let students = document.getElementsByClassName('std-select');\n        let deleteStudents = [];\n        for( let i= 0 ;i<students.length; i++){\n            if(students[i].checked)\n            {\n                deleteStudents.push(students[i].value)\n            }\n        }\n        if(deleteStudents.length === 0){\n            alert('Please selcect students to delete')\n        }\n        this.props.dispatch({\n            type:'DELETE_Students',\n            data: deleteStudents\n        });\n       // console.log(deleteStudents);\n\n    }\n    render() {\n        if(this.props.StudentsDetails.length === 0)\n        {\n            return(\n                <div>\n                    <p className=\"h4 mb-4 pt-2 text-center\">No one has registered yet!!</p>\n                </div>\n            )\n        }\n        else{\n\n            return (\n                <div>\n                <p className=\"h4 mb-4 pt-4 text-center\">Students Details</p>\n                \n                <table className=\"table\" >\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Select</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Password</th>\n                        <th scope=\"col\">Gender</th>\n                        <th scope=\"col\">Nationality</th>\n                        <th scope=\"col\">Update info</th>\n                    </tr>\n                </thead>\n                \n                \n                {this.props.StudentsDetails.map(\n                    (post)=> <Post key={post.email} details={post} />\n                    )}\n            \n                </table>\n                <button type=\"button\" style={{marginLeft: \"45%\"}} className=\"btn btn-danger\" onClick={this.DeleteStudents}>Delete Selected</button>\n\n            </div>\n        )\n    }\n}\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        StudentsDetails: state\n    }\n}\n\n\n\nexport default  connect(mapStateToProps)(Students);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nclass StudentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n             email:'',\n             password:'',\n             gender:'',\n             hobbies:[],\n             country:''\n        }\n    }\n\n   validateEmail = (email) =>{\n       if(email.length===0)\n       {\n        document.getElementById('err-email').style.display='block';\n       }\n       else{\n            return true;\n        }\n    }\n   validatePassword = (pw1) =>{\n        if(pw1.length===0){\n            document.getElementById('pwd-empty').style.display='block';\n        }\n        else{\n            return true;\n        }\n    }\n\n   validateGender = (gender) =>{\n        if(gender.length===0){\n            document.getElementById('err-gender').style.display='block';   \n        }\n        else{\n            return true;\n        }\n    }\n   validateHobby = (hobbies) =>{\n        if(hobbies.length>1){\n           return true;\n        }\n        else{\n            document.getElementById('err-hobby').style.display='block';\n        }        \n    }\n   validateCountry = (country) =>{\n        if(country.length !==0)\n        return true;\n   }\n   onInputChange = ()=>{\n        let x = document.getElementsByClassName('error');\n        for(var i=0; i<x.length; i++){\n           x[i].style.display='none'; \n        }\n    }\n    onSubmit = (e) =>{\n        e.preventDefault();\n        let data= e.target;\n        let email= data.email.value;\n        let password= data.password.value;\n        let gender = data.gender.value;\n        let hobbies = [];\n        data.hobby.forEach(e => {\n                if(e.checked)\n                hobbies.push(e.value) ;\n        });\n        let country = data.country.value;\n        if(\n            this.validateEmail(email) && \n            this.validatePassword(password) &&\n            this.validateGender(gender) &&\n            this.validateHobby(hobbies) &&\n            this.validateCountry(country)\n        )\n        {\n            this.setState({\n                email,\n                password,\n                gender,\n                hobbies,\n                country\n                },\n                ()=>{ //callback function from state state\n                const studentDetails = {...this.state};            \n                // dispatch action to add new student in the list\n                this.props.dispatch({\n                    type:'Update_Student',\n                    data: studentDetails\n                });  \n                if(window.confirm('Thanks Record has been updated!!')){\n                    this.props.history.replace(\"/details\")\n                }\n            })\n            \n    }    \n}\n\ncomponentDidMount() {\n        if(this.props.location.hobbies){\n\n            this.props.location.hobbies.map(\n                h =>  document.getElementById(h).checked='true'\n                )\n        }\n}\n\n\n    \n    render() {\n    if(this.props.location.email){\n    return (\n        <div>\n            <form  className=\"pb-5\" id=\"my-form\" onSubmit={this.onSubmit}>\n            <p className=\"h4 mb-4 text-center\">Update Student Information</p>\n            <div className=\"form-group row\">\n                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\n                <div className=\"col-sm-10\">\n                <input type=\"email\" \n                className=\"form-control\" \n                name=\"email\" \n                placeholder=\"Email\" \n                onChange={this.onInputChange}\n                defaultValue={this.props.location.email}\n                readOnly\n                />\n                <div className=\"error\" id='err-email'>Please provide email ID </div>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Password</label>\n                <div className=\"col-sm-10\">\n                <input type=\"text\" \n                className=\"form-control\" \n                name=\"password\"  \n                placeholder=\"Password\" \n                onChange={this.onInputChange} \n                defaultValue={this.props.location.password}\n                />\n                <div className=\"error\" id=\"pwd-empty\">Password can't be empty</div>\n                </div>\n            </div>\n            <fieldset className=\"form-group\">\n                <div className=\"row\">\n                <legend className=\"col-form-label col-sm-2 pt-0\">Gender</legend>\n                <div className=\"col-sm-10\">\n                    <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"gender\" defaultChecked={(this.props.location.gender==='male')} value=\"male\" onChange={this.onInputChange}  />\n                    <label className=\"form-check-label\" htmlFor=\"gridRadios1\">\n                        Male\n                    </label>\n                    </div>\n                    <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gridRadios2\" defaultChecked={(this.props.location.gender==='female')} value=\"female\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\n                        Female\n                    </label>\n                    </div>\n                    <div className=\"error\" id=\"err-gender\">Please select apporpriate option</div>\n                </div>\n                </div>\n            </fieldset>\n            <div className=\"form-group row\">\n                <div className=\"col-sm-2\">Hobbies</div>\n                <div className=\"col-sm-10\">\n                <div className=\"error\" id=\"err-hobby\">We are sure you have atleast 2 of them?</div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Reading\" id='Reading' onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Reading\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"traveling\" id='traveling' onChange={this.onInputChange}  />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Traveling\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\"  value=\"Music\" id='Music' onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Music\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Dance\" id='Dance' onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Dance\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Gaming\" id=\"Gaming\" onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Gaming\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"hobby\" value=\"Swimming\" id='Swimming' onChange={this.onInputChange} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                    Swimming\n                    </label>\n                </div>\n                </div>\n            </div>\n            <div className=\"form-group row mt-3\">\n            <div className=\"col-sm-2\">Country</div>\n            <div className=\"col-sm-10\">\n            <select className=\"form-control col-sm-2\" name='country' defaultValue={this.props.location.country}>\n                <option >India</option>\n                <option>USA</option>\n                <option>Japan</option>\n                <option>China</option>\n                <option>Other</option>\n            </select>\n            </div>\n            </div>\n            \n            <div className=\"form-group row\">\n                <div className=\"col-sm-10 m-auto\" >\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">UPDATE</button>\n                </div>\n            </div>\n            </form>\n\n\n        </div>\n    )\n}\nelse{\n    return(\n        <Redirect to='/' />\n    )\n}\n}\n\n\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        StudentsDetails: state\n    }\n}\n\nexport default  connect(mapStateToProps)(StudentForm);","import React, { Component } from 'react'\nimport './CSS/main.css';\nimport StudentForm from './components/RegistrationForm.js';\nimport Students from './components/Students';\nimport {BrowserRouter as Router, Route,Switch ,Link} from 'react-router-dom'\nimport logo from './img/logo.png'\nimport UpdateForm from './components/UpdateForm'\nexport default class App extends Component {\n  render() {\n    return (\n    <Router>\n    <div>\n    <header>\n\t\t\t<div className=\"logo-container\">\n\t\t\t\t<img style={{width: \"65px\"}} src={logo} alt=\"logo\" />\n\t\t\t</div>\n\t\t\t<nav>\n\t\t\t\t<ul className=\"nav-links\">\n\n          <Link className=\"nav-link\" to='/details' >All students</Link>\n          <Link className=\"nav-link\" to='/' >Registration Form</Link>\n\n\t\t\t\t\t<li><a className=\"nav-link\" id='git-link' href=\"https://github.com/kpmakwana\" target=\"blank\">Git</a></li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n    </header>\n\n    <div className=\"App\">\n      \n      <Switch>\n      <Route path='/' exact component={StudentForm} />\n      <Route path='/details' component={Students} />\n      <Route path='/update' component={UpdateForm} />\n      <Route path='*' component={StudentForm} />\n      \n      </Switch>\n    </div>\n    </div>\n    </Router>\n  );\n}\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let intialState = [\n    {email: \"makwana.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n    {email: \"makwaa.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n    {email: \"makna.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n    {email: \"mawana.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n    {email: \"mkwana.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n    {email: \"akwana.kaushik98@gmail.com\", password: \"1\", gender: \"male\", hobbies: ['Reading','Dance'], country: \"India\"},\n];\n\nconst reducer = (state = intialState, action) => {\n    //Payload will have all information about new user like intialState \n    if(action.type === 'ADD_Student' )\n    {\n        return state.concat([action.data]);\n    }\n    // Payload will have array of emailids of students to be deleted\n    if(action.type === 'DELETE_Students' )\n    {\n        let dltStudents = action.data;\n        for(let i=0; i<dltStudents.length;i++){\n            state = state.filter( e => e.email !==dltStudents[i])\n        }\n        return state;\n\n    }\n    //Payload will have updateed data so will remove previous entry and concat new data \n    if(action.type === 'Update_Student' )\n    {\n        console.log(action.data);\n        state = state.filter( e => e.email !== action.data.email );\n        state = state.concat(action.data);\n        console.log(state);\n        return state;\n    }\n    // default\n    else{\n        return state\n    }    \n    \n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}